######################################################
#
#  build a docker-lab box base on ubuntu/trusty64
#
######################################################

Vagrant.configure(2) do |config|

  config.vm.box = "ubuntu/trusty64"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  config.vm.provider "virtualbox" do |vb|
    vb.memory = "1024"
  end

  config.vm.define "build" do |build|
  end

  config.vm.provision "shell", inline: <<-SHELL
     echo "**** 01 => change apt-get source to free.nchc.org.tw ****"
     sed -i 's/archive.ubuntu.com/free.nchc.org.tw/g' /etc/apt/sources.list
     sed -i 's/security.ubuntu.com/free.nchc.org.tw/g' /etc/apt/sources.list
     
     echo "**** 02 => add apt repo and key for docker, then update ****"
     echo "deb https://apt.dockerproject.org/repo ubuntu-trusty main" >> /etc/apt/sources.list
     apt-key adv --keyserver hkp://pgp.mit.edu:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D
     apt-get update
     
     echo "**** 03 => Purge the old lxc-docker* packages ****"
     apt-get purge lxc-docker*
     
     echo "**** 04 => Verify that apt is pulling docker from the right repository ****"
     apt-cache policy docker-engine
     
     echo "**** 05 => install docker ****"
     apt-get install -y docker-engine unzip
     docker version
     usermod -aG docker vagrant
     
     echo "**** 06 => apt-get clean ****"
     apt-get clean
     
     echo "**** 07 => docker pull images ****"
     docker pull rancher/server
     docker pull rancher/agent:v0.8.2
     docker pull swarm
     docker pull registry:2.2.0
     
     echo "**** 08 => docker pull images done ****"
     
     echo "**** 09 => install docker-machine ****"
     curl -L https://github.com/docker/machine/releases/download/v0.5.0/docker-machine_linux-amd64.zip > machine.zip && \
     unzip machine.zip && rm machine.zip && mv -f docker-machine* /usr/local/bin
     docker-machine --version
     
     echo "**** 10 => install docker-compose ****"
     curl -L https://github.com/docker/compose/releases/download/1.5.0/docker-compose-`uname -s`-`uname -m` > /usr/local/bin/docker-compose && \
     chmod +x /usr/local/bin/docker-compose
     docker-compose --version
     
     echo "**** 11 => delete /etc/docker/key.json ****"
     rm -f /etc/docker/key.json
     
     echo "**** All finished ****"
     echo "****"
     echo "****"
     echo "**** !! Run 'vagrant package' to generate new box !! ****"
     echo "****"
     echo "****"
     
  SHELL

end
